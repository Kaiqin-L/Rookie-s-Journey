(1) 注释除了用#号，还可以用'''和"""将大段注释内容隔开
 eg:
 """
 这是一行注释
 """
 
(2) Python用缩进代替了花括号{}，在编写程序时要注意缩进是否一致。在缩进不一致时，会出现类似下列错误：IndentationError: unindent does not match any outer indentation level

(3) 如果python语句过长，可以使用反斜杠（\）来实现多行语句，例如，
a=float1+float2+\
    float3+\
  float4
 此时这三行不需要考虑缩进的问题。
 此外，在[]，{}，（）中编写多行语句则不需要使用反斜杠隔开。
 
 (4)数字类型
 在Pyhon中数字有四种类型：整数、布尔型、浮点数和复数。
 int（整数），只有一种整数类型int，表示为长整型；bool (布尔), 如 True；float (浮点数), 如 1.23、3E-2；complex (复数), 如 1 + 2j、 1.1 + 2.2j
 
 在定义变量时，不用申明变量的类型，直接定义即可。例如，
 a=1
 b=6
 c=6
 或者a,b,c=1,6,6
 不需要分号结尾
 
 (5) 字符串
 在Python中，单引号和双引号使用完全相同
 
 使用三引号（'''或"""）可以定义多行字符串，如
    str="""this is a new world of 
    programing"""
   显示的结果不是"this is a new world of programing"，而是以两行的形式呈现
   
 反斜杠"\"可以用来转义，使用r可以避免转义，如 r"hello,\n"中，"\n"会显示出来，不会换行。
 
 str4="this""is" "string"出现的结果是thisisstring，如果中间要隔开，可写为str4="this"" ""is"" ""string"，则编译出来的结果为this is string
 
 字符串可以用 + 运算符连接在一起，用 * 运算符重复
 
 Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始
 
 Python 没有单独的字符类型，一个字符就是长度为 1 的字符串
 
 字符串的截取的语法格式如下：变量[头下标:尾下标:步长]
 
 （6）空行
 函数或者类的方法之间用空行分隔，表示一段新的代码开始。类和函数入口之间也用空行分隔开。空行与代码缩进不同，不是python语法的一部分，而是程序代码的一部分。书写时不插入空行，python编译器也不会报错。空行的目的时是区分两端不同功能或含义的代码。种

  (7)等待用户输入
  执行下面的程序之后，会等待用户的输入。
  input("\n\n按下 enter 键后退出。")
  以上代码中 ，"\n\n"在结果输出前会输出两个新的空行。一旦用户按下 enter 键时，程序将退出。
  
  (8)同一行显示多条语句
  同一行使用多条语句时，语句之间用(;)隔开，如下代码所示：
  import sys; x = 'hello'; sys.stdout.write(x + '\n')
  
  (9) 多个语句构成代码组
  缩进相同的一组语句构成一个代码块，我们称之代码组。
  像if、while、def和class这样的复合语句，首行以关键字开始，以冒号( : )结束，该行之后的一行或多行代码构成代码组。
  将首行及后面的代码组称为一个子句(clause)
  
  (10)print输出
  print输出是默认换行的，如果要不换行输出，可以在后面加end=" "
  print( x, end=" " )
  print( y, end=" " )
  
  (11) import 与 from...import
  在 python 用 import 或者 from...import 来导入相应的模块。
  将整个模块(somemodule)导入，格式为： import somemodule
  从某个模块中导入某个函数,格式为： from somemodule import somefunction
  从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc
  将某个模块中的全部函数导入，格式为： from somemodule import *
  import sys
  from sys import argv,path
  
  (12) 命令行参数
  python中还有命令行参数，后期使用到再做补充。
