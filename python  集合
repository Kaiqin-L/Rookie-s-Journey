集合（set）是一个无序的不重复元素序列，可以通过{ }或set（）函数来创建。值得注意的是，创建空集合时必须用set（）而不是{ }，因为{ }是用来创建一个空字典。
  集合也有诸如添加，删除元素等许多内置方法，重要的是它提供了求集合交集，差集，俩集合是否包含先共同元素。
  集合不支持索引读取元素。直接通过print + 集合名来输出整个集合。
  
  set.difference(set)方法返回的是指定集合删除与参数集合中共同的元素后剩下的集合，该返回的集合是新的集合，制定集合本身不会有变化
  set.difference_update(set)方法是在指定集合中删除与参数集合中共同的元素，没有返回值
  
  symmetric_difference()返回两个集合中不重复的元素集合，返回新的集合
  symmetric_difference_update() 移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中，x.symmetric_difference_update(y)，集合x会被改变
  
  intersection()函数返回一个新的集合，集合中的元素是两个或多个集合的交集， x.intersection(y,z)
  intersection_update()同样没有返回值，该方法会删除指定集合中与其他集合的交集之外的元素
  
  isdisjoint()判断两个集合中是否有相同元素，有返回true，否则返回false
  
  issubset() 判断指定集合是否为参数集合的子集
  issuperset() 判断参数集合是否是指定集合的子集
  
  union() 方法返回两个集合的并集，即包含了所有集合的元素，重复的元素只会出现一次，返回一个新集合
  
  ***list与set中内置方法的区别
    
    在list内置方法中，添加元素使用的是append（）函数在列表末尾添加新的元素，或者使用insert（index，object）函数在指定的下标处插入新元素。而在set中使用add（）函数和update()函数来添加新的元素，其中前者每次只能添加单个元素，而后者的参数可以是多个，由逗号隔开，参数类型可以是列表，元组，字典等。
    
    在list内置方法中，删除元素的操作可以用remove（value）,pop(index)两种方法，而在集合中也有remove()法，且当元素不在列表或集合中时会发生错误，前者爆出valueerror，后者则为keyerror错误。（集合可以看作是没有value的字典）
    在set中可以使用discard( x )来删除元素，当元素不在集合中时，不会报错,也不会对set做任何处理。此外，还可以使用pop()函数来随机删除一个元素，pop函数是没有参数的，有的话会报错，这点与list是不同的。
    
 最后：列表是有序的对象集合，字典和集合都是无序的对象集合
    
